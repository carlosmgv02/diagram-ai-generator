name: Release to PyPI

on:
  push:
    branches:
      - master
      - main
    paths-ignore:
      - 'README.md'
      - 'docs/**'
      - '.github/**'
      - 'CHANGELOG.md'
      - 'LICENSE'

jobs:
  check-version:
    name: Check Version Change
    runs-on: ubuntu-latest
    outputs:
      should_release: ${{ steps.version_check.outputs.changed }}
      new_version: ${{ steps.get_version.outputs.version }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 2

      - name: Get current version
        id: get_version
        run: |
          VERSION=$(grep '^version = ' pyproject.toml | sed 's/version = "\(.*\)"/\1/')
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "Current version: $VERSION"

      - name: Check if version changed
        id: version_check
        run: |
          git fetch origin master
          CURRENT_VERSION=$(grep '^version = ' pyproject.toml | sed 's/version = "\(.*\)"/\1/')
          PREVIOUS_VERSION=$(git show HEAD~1:pyproject.toml | grep '^version = ' | sed 's/version = "\(.*\)"/\1/')
          
          echo "Previous version: $PREVIOUS_VERSION"
          echo "Current version: $CURRENT_VERSION"
          
          if [ "$CURRENT_VERSION" != "$PREVIOUS_VERSION" ]; then
            echo "changed=true" >> $GITHUB_OUTPUT
            echo "✅ Version changed from $PREVIOUS_VERSION to $CURRENT_VERSION"
          else
            echo "changed=false" >> $GITHUB_OUTPUT
            echo "ℹ️  Version unchanged - skipping release"
          fi

  release:
    name: Build and Publish
    runs-on: ubuntu-latest
    needs: check-version
    if: needs.check-version.outputs.should_release == 'true'
    environment:
      name: pypi
      url: https://pypi.org/project/diagram-ai-generator/
    permissions:
      contents: write
      id-token: write
    
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install build twine

      - name: Build package
        run: |
          python -m build
          echo "✅ Package built successfully"

      - name: Check package
        run: |
          twine check dist/*
          echo "✅ Package validation passed"

      - name: Publish to PyPI
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
        run: |
          python -m twine upload dist/*
          echo "✅ Published to PyPI"

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ needs.check-version.outputs.new_version }}
          name: Release v${{ needs.check-version.outputs.new_version }}
          body: |
            ## 🚀 Version ${{ needs.check-version.outputs.new_version }}
            
            ### Installation
            ```bash
            pip install --upgrade diagram-ai-generator
            ```
            
            ### PyPI
            https://pypi.org/project/diagram-ai-generator/${{ needs.check-version.outputs.new_version }}/
            
            See [CHANGELOG.md](CHANGELOG.md) for detailed changes.
          draft: false
          prerelease: false
          generate_release_notes: true

      - name: Update CHANGELOG
        run: |
          VERSION="${{ needs.check-version.outputs.new_version }}"
          DATE=$(date +%Y-%m-%d)
          
          # Create changelog entry
          cat > changelog_entry.md << EOF
          ## [$VERSION] - $DATE
          
          ### Added
          - See GitHub release notes for details
          
          ### Changed
          - See commit history for all changes
          
          EOF
          
          # Prepend to CHANGELOG.md (after header)
          if [ -f CHANGELOG.md ]; then
            head -n 4 CHANGELOG.md > temp_changelog.md
            cat changelog_entry.md >> temp_changelog.md
            tail -n +5 CHANGELOG.md >> temp_changelog.md
            mv temp_changelog.md CHANGELOG.md
          fi

      - name: Commit CHANGELOG
        run: |
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          git add CHANGELOG.md
          git commit -m "chore: update CHANGELOG for v${{ needs.check-version.outputs.new_version }}" || echo "No changes to commit"
          git push || echo "No changes to push"

